# -*- coding: utf-8 -*-
"""CodSoft - TASK 3

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12o37whTQIOrHo5RTQqlmllUJVWCr36f_

# **CodSoft - TASK 3**

# **Titanic Survival Prediction**
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

# Load the Titanic dataset from an external CSV file
titanic_data = pd.read_csv('/content/drive/MyDrive/CodSoft/tested.csv')
titanic_data

# Handle missing values
titanic_data.dropna(subset=['Age', 'Fare', 'Embarked'], inplace=True)

# Select features and target variable
X = titanic_data[['Pclass', 'Sex', 'Age', 'Fare', 'Embarked']]
y = titanic_data['Survived']

# Convert categorical variables to numerical using one-hot encoding
X = pd.get_dummies(X, columns=['Sex', 'Embarked'], drop_first=True)

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize and train the Random Forest classifier
model = RandomForestClassifier(random_state=42)
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
classification_rep = classification_report(y_test, y_pred)

print("Accuracy:", accuracy)
print("Classification Report:\n", classification_rep)